# 数据库配置
DB_DSN=platform:platform123@tcp(mysql:3306)/gpu_platform?charset=utf8mb4&parseTime=True&loc=Local

# 服务端口
PORT=8080

# 用户端口配置
# 默认端口前缀，用户端口将在此基础上分配
# 例如：9000 表示用户端口从9000开始分配
DEFAULT_PORT_PREFIX=9000
# 用户端口分配步长（每个用户占用的端口数量）
# 例如：10 表示第一个用户使用9000-9009，第二个用户使用9010-9019
# 端口分配：0=SSH, 1=VSCode, 2=Jupyter, 3=TensorBoard, 4-9=备用应用
PORT_STEP=10

# 数据存储路径配置（管理后端容器内路径）
# 这些路径是管理后端容器内看到的路径，对应docker-compose.yml中的挂载目标
# 注意：如果不提供.env文件，将使用docker-compose.yml中的默认值

# 默认配置（与docker-compose.yml默认值一致）：
USERS_DATA_PATH=/app/users
SHARED_DATA_PATH=/shared  
WORKSPACE_DATA_PATH=/workspace

# 生产环境可以修改为绝对路径：
# USERS_DATA_PATH=/data/gpu-platform/users
# SHARED_DATA_PATH=/data/gpu-platform/shared
# WORKSPACE_DATA_PATH=/data/gpu-platform/workspace

# 宿主机挂载配置（在docker-compose.yml中定义）：
# - ./data/users:/app/users (用户数据目录)
# - ./shared:/shared (共享只读目录)  
# - ./data/workspace:/workspace (共享工作空间)

# 容器内路径配置 (通常不需要修改)
CONTAINER_HOME_PATH=/home
CONTAINER_SHARED_PATH=/shared
CONTAINER_WORKSPACE_PATH=/workspace

# 内部Pip源配置（内网环境）
# 配置后，新建容器时会自动使用内部pip源
PIP_INDEX_URL=http://your-internal-pypi.company.com/simple/
PIP_TRUSTED_HOST=your-internal-pypi.company.com
PIP_TIMEOUT=60